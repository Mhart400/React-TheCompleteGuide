{"version":3,"sources":["components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.module.css","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/Quote.js"],"names":["module","exports","CommentItem","props","className","classes","item","text","CommentsList","comments","map","comment","id","NewCommentForm","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","quoteId","form","onSubmit","LoadingSpinner","control","htmlFor","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","length","onClick","HighlightedQuote","quote","author","Quote","params","match","useRouteMatch","getSingleQuote","loadedQuote","exact","path","to","url"],"mappings":"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","file":"static/js/3.80eec8e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useEffect, useRef } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport classes from './NewCommentForm.module.css';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  \n  \n\n  \n  const { sendRequest, status, error } = useHttp(addComment);\n  \n  const { onAddedComment } = props;\n  \n  useEffect(()=> {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  },[status, error, onAddedComment])\n  \n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n    \n    // optional: Could validate here\n\n    // send comment to server\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && <div className='centered'><LoadingSpinner/></div>}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./Comments.module.css\";\nimport CommentsList from \"./CommentsList\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const params = useParams();\n  const { quoteId } = params;\n\n  const {\n    sendRequest,\n    status,\n    error,\n    data: loadedComments,\n  } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  \n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (status === \"completed\" && (!loadedComments || loadedComments.length === 0)) {\n    comments = <p className='centered'>No Comments were added yet</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          onAddedComment={addedCommentHandler}\n          quoteId={quoteId}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useEffect } from \"react\";\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nconst Quote = () => {\n  \n  const params = useParams();\n  const match = useRouteMatch();\n  \n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote, true);\n\n  \n  useEffect(()=> {\n    sendRequest(quoteId)\n  },[quoteId, sendRequest])\n\n  if (status === 'pending' ) {\n    return <div className='centered' ><LoadingSpinner/></div>\n  }\n\n  if (error) {\n    return <p className='centered'>{error}</p>\n  }\n\n  if (!loadedQuote.text) {\n    return <p> no quote found</p>;\n  }\n\n  return (\n    <>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} exact />\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`} exact >\n        <Comments />\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}`}>\n            Hide Comments\n          </Link>\n        </div>\n      </Route>\n\n      <p>\n        <Link to=\"/quotes\">Back</Link>\n      </p>\n    </>\n  );\n};\n\nexport default Quote;\n"],"sourceRoot":""}