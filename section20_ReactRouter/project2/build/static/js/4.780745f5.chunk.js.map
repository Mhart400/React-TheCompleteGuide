{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isEntering","setIsEntering","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","history","useHistory","useHttp","addQuote","status","sendRequest","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBC4D/BC,EAzDG,SAACL,GACjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBAErB,EAAoCE,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAqBA,OACE,qCACE,cAAC,IAAD,CAAQC,KAAMF,EAAYG,QAAS,SAACC,GAAD,MAAc,mEACjD,cAAC,EAAD,UACE,uBACEC,QAxBmB,WACzBJ,GAAc,IAwBRV,UAAWC,IAAQc,KACnBC,SAlBR,SAA2BC,GACzBA,EAAMC,iBACN,IAAMC,EAAgBd,EAAee,QAAQC,MACvCC,EAAcf,EAAaa,QAAQC,MAIzCtB,EAAMwB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAQ5C,UAKGvB,EAAM2B,WACL,qBAAK1B,UAAWC,IAAQ0B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK5B,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK5B,OAEtC,sBAAKL,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAK1B,OAEpC,qBAAKP,UAAWC,IAAQkC,QAAxB,SACE,wBAAQnC,UAAU,MAAMoC,QAvCF,WAC9B1B,GAAc,IAsCN,kC,gBChCG2B,UAjBE,WACf,IAAMC,EAAUC,cAChB,EAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,YAEhBC,qBAAU,WACO,cAAXF,GACFJ,EAAQO,KAAK,aAEd,CAACH,EAAQJ,IAMZ,OAAO,cAAC,EAAD,CAAWZ,UAAsB,YAAXgB,EAAsBnB,WAJ3B,SAACuB,GACvBH,EAAYG","file":"static/js/4.780745f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  const [isEntering, setIsEntering] = useState(false);\n  \n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  const finishedEnteringHandler = () => {\n    setIsEntering(false);\n  };\n  \n  function submitFormHandler(event) {\n    event.preventDefault();\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText,});\n  }\n\n\n  return (\n    <>\n      <Prompt when={isEntering} message={(location) => 'Are you sure you want to leave? All entered data will be lost'} />\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className=\"btn\" onClick={finishedEnteringHandler} >Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from \"../components/quotes/QuoteForm\";\nimport { useHistory } from \"react-router-dom\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\nimport { useEffect } from \"react\";\n\nconst NewQuote = () => {\n  const history = useHistory();\n  const { status, sendRequest } = useHttp(addQuote);\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      history.push(\"/quotes\");\n    }\n  }, [status, history]);\n\n  const addQuoteHandler = (quoteData) => {\n    sendRequest(quoteData);\n  };\n\n  return <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />;\n};\n\nexport default NewQuote;\n"],"sourceRoot":""}